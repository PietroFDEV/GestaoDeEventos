// <auto-generated />
using System;
using GestaoDeProjetos.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestaoDeProjetos.Migrations
{
    [DbContext(typeof(GestaoprojetosContext))]
    partial class GestaoprojetosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GestaoDeProjetos.Models.Avaliaco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Comentario")
                        .HasColumnType("text")
                        .HasColumnName("comentario");

                    b.Property<DateTime?>("DataAvaliacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("data_avaliacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("EventoId")
                        .HasColumnType("int")
                        .HasColumnName("evento_id");

                    b.Property<int?>("Nota")
                        .HasColumnType("int")
                        .HasColumnName("nota");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "EventoId" }, "evento_id");

                    b.HasIndex(new[] { "UsuarioId" }, "usuario_id");

                    b.ToTable("avaliacoes", (string)null);
                });

            modelBuilder.Entity("GestaoDeProjetos.Models.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("Capacidade")
                        .HasColumnType("int")
                        .HasColumnName("capacidade");

                    b.Property<DateTime>("Data")
                        .HasColumnType("date")
                        .HasColumnName("data");

                    b.Property<DateTime?>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("data_criacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time")
                        .HasColumnName("hora");

                    b.Property<string>("Local")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("local");

                    b.Property<string>("TipoEvento")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tipo_evento");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("titulo");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    b.Property<int?>("Preco")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("preco");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "UsuarioId" }, "usuario_id")
                        .HasDatabaseName("usuario_id1");

                    b.ToTable("eventos", (string)null);
                });

            modelBuilder.Entity("GestaoDeProjetos.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("CodigoQr")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("codigo_qr");

                    b.Property<DateTime?>("DataCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("data_compra")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("EventoId")
                        .HasColumnType("int")
                        .HasColumnName("evento_id");

                    b.Property<int?>("Lote")
                        .HasColumnType("int")
                        .HasColumnName("lote");

                    b.Property<decimal?>("Preco")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("preco");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CodigoQr" }, "codigo_qr")
                        .IsUnique();

                    b.HasIndex(new[] { "EventoId" }, "evento_id")
                        .HasDatabaseName("evento_id2");

                    b.HasIndex(new[] { "UsuarioId" }, "usuario_id")
                        .HasDatabaseName("usuario_id2");

                    b.ToTable("tickets", (string)null);
                });

            modelBuilder.Entity("GestaoDeProjetos.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("data_criacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("senha");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Email" }, "email")
                        .IsUnique();

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("GestaoDeProjetos.Models.Avaliaco", b =>
                {
                    b.HasOne("GestaoDeProjetos.Models.Evento", "Evento")
                        .WithMany("Avaliacos")
                        .HasForeignKey("EventoId")
                        .HasConstraintName("avaliacoes_ibfk_1");

                    b.HasOne("GestaoDeProjetos.Models.Usuario", "Usuario")
                        .WithMany("Avaliacos")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("avaliacoes_ibfk_2");

                    b.Navigation("Evento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GestaoDeProjetos.Models.Evento", b =>
                {
                    b.HasOne("GestaoDeProjetos.Models.Usuario", "Usuario")
                        .WithMany("Eventos")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("eventos_ibfk_1");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GestaoDeProjetos.Models.Ticket", b =>
                {
                    b.HasOne("GestaoDeProjetos.Models.Evento", "Evento")
                        .WithMany("Tickets")
                        .HasForeignKey("EventoId")
                        .HasConstraintName("tickets_ibfk_1");

                    b.HasOne("GestaoDeProjetos.Models.Usuario", "Usuario")
                        .WithMany("Tickets")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("tickets_ibfk_2");

                    b.Navigation("Evento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GestaoDeProjetos.Models.Evento", b =>
                {
                    b.Navigation("Avaliacos");

                    b.Navigation("Localidades");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("GestaoDeProjetos.Models.Usuario", b =>
                {
                    b.Navigation("Avaliacos");

                    b.Navigation("Eventos");

                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
